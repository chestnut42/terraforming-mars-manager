syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "pkg/api/user.proto";

option go_package = "github.com/chestnut42/terraforming-mars-manager/pkg/api";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  responses: {
    key: "401"
    value: {
      description: "You have provided no authorization token or the token provided is invalid."
    }
  }
  security_definitions: {
    security: {
      key: "Bearer"
      value: {
        type: TYPE_API_KEY
        name: "Authorization"
        in: IN_HEADER,
        description: "Enter the token with the `Bearer: ` prefix, e.g. ""Bearer abcde12345""."
      }
    }
  }
};



service Users {
  rpc Login(Login.Request) returns (Login.Response) {
    option (google.api.http) = {
      post: "/manager/api/v1/login"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { security_requirement { key: "Bearer" }}
    };
  }

  rpc GetMe(GetMe.Request) returns (GetMe.Response) {
    option (google.api.http) = {
      get: "/manager/api/v1/me"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { security_requirement { key: "Bearer" }}
    };
  }
  rpc UpdateMe(UpdateMe.Request) returns (UpdateMe.Response) {
    option (google.api.http) = {
      post: "/manager/api/v1/me"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { security_requirement { key: "Bearer" }}
    };
  }

  rpc UpdateDeviceToken(UpdateDeviceToken.Request) returns (UpdateDeviceToken.Response) {
    option (google.api.http) = {
      post: "/manager/api/v1/me/device-token"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { security_requirement { key: "Bearer" }}
    };
  }

  rpc SearchUser(SearchUser.Request) returns (SearchUser.Response) {
    option (google.api.http) = {
      post: "/manager/api/v1/search"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { security_requirement { key: "Bearer" }}
    };
  }
}



message Login {
  message Request {}

  message Response {
    User user = 1;
  }
}

message GetMe {
  message Request {}

  message Response {
    User user = 1;
  }
}

message UpdateMe {
  message Request {
    UserSettings settings = 1;
  }

  message Response {
    User user = 1;
  }
}

message UpdateDeviceToken {
  message Request {
    bytes device_token = 1;
  }

  message Response {}
}

message SearchUser {
  message Request {
    string search = 1;
  }

  message Response {
    repeated UserSettings users = 1;
  }
}
